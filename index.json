[{"content":"Permutation of Sets $\\boldsymbol{\\sf Definition: }$ permutation A permutation of a set $S$ can be thought of as a listing of the elements $S$ in some order.\n$P(n, r)$ denotes the number of $r$-permutations of an $n$-element set.\n$\\boldsymbol{\\sf Definition:}$ $r$-permutation\nAn $r$-permutation of a set $S$ is a string $a_1, a_2, \u0026hellip; a_r$ where $a_i \\in S, \\forall i \\in [r]$ and $a_i \\neq a_j$ for $i \\neq j$.\nNote: $[r] = {1, 2, \u0026hellip;, r}$\n$\\boldsymbol{\\textsf{Theorem}}$ For $n$ and $r$ positive integers with $r \\leq n$, $$ P(n, r) = n \\cdot (n - 1) \\cdot \\cdot \\cdot(n - r + 1) $$ $\\boldsymbol{\\sf Proof: }$ by multiplication principle.\nWIth the notation of factorial, we can write: $$ P(n, r) = \\frac{n!}{(n - r)!} $$\n$\\boldsymbol{\\sf Exercise}$ How many ways are there to label the squares for the $4 \\times 4$ chessboard with the numbers $1,2, \u0026hellip;, 15$, in such a way that exactly one square does not receive any label?\nsolution: Consider labeling the empty square with 16\u0026hellip;\n$\\boldsymbol{\\sf Exercise}$ What is the number of ways to order the 26 letters so that no two vowels a, e, i, o, u occurs consecutively?\nLeft as an exercise.\n$\\boldsymbol{\\sf Exercise}$ How many seven-digit numbers are there such that the digits are distinct integers taken from ${1, 2, \u0026hellip;, 9}$ and such that the digits 5 and 6 do not appear consecutively in either order?\nsolution: $m$ = The number of all possible combination = $\\frac{9!}{2!}$.\n$k$ = The number of strings of size 6 with distinct elements in ${1, 2, 3, 4, 7, 8, 9, x}$ and containning $x$, where $x = 56$. $= 6 \\cdot 7 \\cdot 6 \\cdot 5 \\cdot 4 \\cdot 3$\nThe first 6 is for the position to place $x$.\nAns = $m - 2k$\nCircular permutation $\\boldsymbol{\\textsf{Theorem}}$ The number of circular $r$-permutation of a set of $n$ elements is given by:\n$$ \\frac{P(n, r)}{r} = \\frac{n!}{r \\cdot (n-r)!} $$ Pf: Similar to the line permutation. We divide the number by $r$ because the same circle is counted $r$ times for all circles.\nReference: https://lmattos.web.illinois.edu/math-413-lecture-log/, MATH 413, Leticia Dias Mattos\nIF YOU KNOW LESS FORMULAS, YOU WOULD HAVE MORE SPACES IN YOUR BRAIN \u0026mdash; Leticia Dias Mattos\n","permalink":"https://helloboyxxx.github.io/samblog/posts/413_permutation/","summary":"Permutation of Sets $\\boldsymbol{\\sf Definition: }$ permutation A permutation of a set $S$ can be thought of as a listing of the elements $S$ in some order.\n$P(n, r)$ denotes the number of $r$-permutations of an $n$-element set.\n$\\boldsymbol{\\sf Definition:}$ $r$-permutation\nAn $r$-permutation of a set $S$ is a string $a_1, a_2, \u0026hellip; a_r$ where $a_i \\in S, \\forall i \\in [r]$ and $a_i \\neq a_j$ for $i \\neq j$.","title":"413_permutation"},{"content":"Texture Synthesis \u0026amp; Hole Filling Texture Texture depicts spacially repeating patterns.\nTexture Synthesis Create new samples of a given texture. Many applications: virtual environments, hole-filling, texturing surfaces.\nThe challenge:\nNeed to model the whole spectrum: from repeated to stochastic texture.\nOne idea:\nCompute statistics of input texture Generate a new texture that keeps those same statistics. But it is hard to model those probabilities distributions.\nAnother idea: ==Efros \u0026amp; Leung algorithm==\nHow to match patches?\nGaussian-weighted SSD (sum square difference) gives us more emphasis on nearby pixels. $$ \\text{SSD}(P, Q) = \\sum_{i, j}(p_{ij} - q_{ij})^2 w_{ij}\\ \\text{where } w_{ij} = e^{ \\frac{-(1-w/2)^2 - (j - h/2)^2}{2 \\sigma^2} } $$\nwhere $P$, and $Q$, are two patches, $w$ and $h$ in the $w_{ij}$ is the width and height of the patch.\nWhat order to fill in new pixels?\n\u0026ldquo;Onion skin\u0026rdquo; order: pixels with most neighbors are synthesized first. How big should the patches be? The size of neighborhood window decides how stochasticity of the texture. A smaller window size gives a more random output.\n$\\boldsymbol{\\textsf{Texture synthesis algorithm}}$ While image not filled:\nGet unfilled pixels with filled neighbors, sorted by the numebr of filled neighbors. (priority queue?) For each pixel, get top N matches based on visible neighbors. This is where we use the Gaussian-weighted SSD. Randomly select one of the matches and copy pixels from it. This algorithm can be used for hole filling, extrapolation, \u0026hellip;\nHole Filling Sometimes, we can add more weights for the continuos edges when peforming the onion filling. (Gradient sensitive)\nThe Efros \u0026amp; Leung texture synthesis algorithm is simple and good, but too slow\u0026hellip;\nThe next iteration is: Image quilting (Efros \u0026amp; Freeman 2001).\nIt depends on the observation that: neighbor pixels are highly correlated. Now, instead of filling pixel by pixel, we fill block by block.\nWe need to put the tiles together. To make them look seemless, we can use this minimal error boundary cut. We calculate the square difference of the overlapping part, and calcualte the boundary. Using this simplified Dijikstra\u0026rsquo;s algorithm, we can easy calculate what we want.\n","permalink":"https://helloboyxxx.github.io/samblog/posts/445_texture/","summary":"Texture Synthesis \u0026amp; Hole Filling Texture Texture depicts spacially repeating patterns.\nTexture Synthesis Create new samples of a given texture. Many applications: virtual environments, hole-filling, texturing surfaces.\nThe challenge:\nNeed to model the whole spectrum: from repeated to stochastic texture.\nOne idea:\nCompute statistics of input texture Generate a new texture that keeps those same statistics. But it is hard to model those probabilities distributions.\nAnother idea: ==Efros \u0026amp; Leung algorithm==","title":"445_texture"},{"content":"If $n+1$ objects are distributed into $n$ boxes, then at least one box contains two or more of the objects.\n$\\boldsymbol{\\sf Proof}$\nFor each $i\\in \\set{1, \u0026hellip;, n}$, let $a_i = $ number of objects in box $i$. Then, $a_1 + \u0026hellip; + a_n = n+1$ Let $a_j = \\text{max } a_i$. Then, \\begin{align*} n+1 \u0026amp;\\leq n\\cdot a_j \\\\ \\frac{n+1}{n} \u0026amp;\\leq a_j \\\\ 1 \u0026lt; \\frac{n+1}{n} \u0026amp;\\leq a_j\\\\ 1 \u0026amp;\u0026lt; a_j \\end{align*} Note that this conclusion doesn\u0026rsquo;t hold if you have $n$ objects or less.\n$\\boldsymbol{\\sf Exercise}$ There are 5 points in a square of side length 2. Prove that at least two of them are with the distance at most $\\sqrt{2}$.\nEqually divide this square into four smaller squares with side length 1. By the pigeonhole principle, $\\exists$ one $1 \\times 1$ square with $ \\geq$ 2 points.\n$\\boldsymbol{\\textsf{Theorem}}$ A grid of 27 points (forming a $3 \\times 9$ square) in the plane is given.Each point is coloured red or blue. Prove taht there exists a monochromatic rectangle, that is, a rectangle with all four vertices of the same color.\n$\\boldsymbol{\\sf Proof}$\nConsider the the pattern of coloring of a single column. Each colum has 3 points. Then, there are $2^3 = 8$ ways of coloring this column. As there are 9 columns in this square, by pigeonhole principle, there are at least two columns in the same pattern. Again, by the pigeonhole principle, each column must have at least two red or two blue.\nMore abstract formulations of the pigeonhole principle Let $X$ and $Y$ be finite sets and let $f: X \\to Y$ be a function from $X$ to $Y$.\n$\\boldsymbol{\\sf Proposition}$ If $X$ has more elements than $Y$, then $f$ is not injective.\n$\\boldsymbol{\\sf Proof}$\nLet $X = \\set{x_1, \u0026hellip;, x_n}$, $Y = \\set{y_1, \u0026hellip;, y_m}$\nDefine $A_i = \\set{x_j : f(x_j) = y_i}, \\forall i \\in \\set{1, \u0026hellip;, m}$.\nThen we have: $n = |X| = |A_1| + \u0026hellip; + |A_m|$\nSuppose for contradiction that $f$ is injective\n$\\implies |A_i| \\leq 1 \\implies |X| = |A_1| + \u0026hellip; + |A_m| \\leq m \\implies n \\leq m$. Contradiction\n$\\boldsymbol{\\sf Proposition}$ If $X$ and $Y$ have the same number of elements and $f$ is surjective, then $f$ is injective.\n$\\boldsymbol{\\sf Proof}$ $n = |X| = |A_1| + \u0026hellip; + |A_m| \\geq m$ by the definition of surjective. And since $m=n$, $|A_1| + \u0026hellip; + |A_m| = m \\implies |A_i| = 1$\n$\\boldsymbol{\\sf Proposition}$ If $X$ and $Y$ have the same number of elements and $f$ is injective, then $f$ is surjective.\n$\\boldsymbol{\\textsf{Theorem}}$ Let $m$ be any positive integer and let $a_1, \u0026hellip;, a_m$ be a sequence be any sequance of $m$ integers. Then, there exsist consecutive $a$\u0026rsquo;s in the sequence whose sum is divisible by $m$.\n$\\boldsymbol{\\sf Proof}$\nPigeons:\n\\begin{matrix} a_1\\\\ a_1 + a_2\\\\ \\vdots\\\\ a_1 + a_2 + ... + a_m \\end{matrix}\nPigeonholes:\n$$ A_r = \\set{n \\in \\mathbb{Z} : n = qm + r, q \\in \\mathbb{Z}}, \\text{where } r \\in \\set{1, \u0026hellip;, m} $$\nNotice that we select $r$ from $1$ to $m$. This is because:\nWhenever we have some $k \\in \\set{1, .., m}$ such that $a_1 + \u0026hellip; + a_k = qm = qm + 0$, we have done finding our goal sequence.\nOtherwise, putting $m$ pigeons into $m-1$ pigeonholes gives us a fact that $\\exists i, j \\in \\set{1, \u0026hellip;, m}, i \\neq j$ such that $(a_1 + \u0026hellip; + a_i) \\equiv (a_1 + \u0026hellip; a_j) \\text{ mod }m $. WLOG, suppose $i \u0026lt; j$, we have $m \\mid (a_{i+1} + \u0026hellip; + a_j)$, giving us what we want.\n$\\boldsymbol{\\sf Exercise}$\nA chess master who has 11 weeks to prepare for a turnament decies to play at least one game everday. But to avoid tiring himself, he decides not to play more than 12 games during any calendar week. Show that there exists a succession of days during which the chess master will have played exactly 21 games.\nSolution:\n$77 \\leq \\text{number of games} \\leq 132$\nDefine the sequence: $$ \\begin{align*} a_1 \u0026amp;= \\text{# games played at day 1}\\\\ a_2 \u0026amp;= \\text{# games played at day 1 and day 2}\\\\ \\vdots\\\\ a_{77} \u0026amp;= \\text{# games played from day 1 to day 77} \\end{align*} $$ Define another sequence: $$ \\begin{align*} \u0026amp;a_1 + 21\\\\ \u0026amp;a_2 + 21\\\\ \u0026amp;\\vdots\\\\ \u0026amp;a_{77}+21 \\end{align*} $$\nPut these two sequences together, we have a sequance of size $77 \\cdot 2 = 154$\nThe goal is to show that two of them are equal. Note that there are 132 games at maximum, then the maximum number in this $132 + 21 = 153$.\nBy the pigeonhole pirinciple, two of them are equal. And since these two equal number may not come from the same sequence, $\\exists a_i = a_j + 21$, which gives us the consecutive days $i$ to $j$.\n$\\boldsymbol{\\textsf{Chinese Remainder Theorem}}$ Let $m$ and $n$ be relatively prime positive integers, and let $a$ and $b$ be integers where $0 \\leq a \\leq m - 1$ and $0 \\leq b \\leq n - 1$.\nThen, there is a positive integer $x$ such that $x = pm + a = qn + b$ for some integer $p,q$.\n$\\boldsymbol{\\sf Proof}$\nConsider the sequence that has $n$ numbers in this sequence. $$ a, m + a, 2m+a, \u0026hellip;, (n-1)m + a $$\nClaim: No two numbers in this sequence have same remainder division by $n$.\nSuppose, by contradiction, that $\\exists i\u0026lt; j, p, q, \\in \\mathbb{Z}, \\text{and } r \\in \\set{0, \u0026hellip;, n-1}$ such that:\n$im + a = pn + r$ and $jm + a = qn + r$. This gives us: $$ (j - i)m = n(q-p)\\ \\implies n \\mid (j - i)m\\ \\implies n \\mid (j-i) $$ As $i, j \\leq n - 1 \\implies 0 \\leq j-i \\leq n-1 \\implies j-i = 0$, giving us a contradiction\nThen the claim is true.\nTherefore, all the remainders show up $\\implies$ there exists $i$ such that $im + a = pn + b, p \\in \\mathbb{Z}$. $\\blacksquare$\n$\\boldsymbol{\\textsf{Strong Form of Pigeonhole Principle}}$ Let $q_1, q_2, \u0026hellip;, q_n$ be positive integers. If $q_1 + \u0026hellip; + q_n - n + 1$ objects are distributed into $n$ boxes, then either the first box contains at least $q_1$ objects, or the second box contains at least $q_2$ objects,\u0026hellip; or the $n$th box contains at least $q_n$ objects.\n$\\boldsymbol{\\sf Proof}$\nSuppose for contradiction that:\nBox 1 recieves $\\leq q_1 - 1$ Box 2 recieves $\\leq q_2 - 1$ \u0026hellip; Box $n$ recieves $\\leq q_n - 1$ Which sums to $(q_1 + .. + q_n) - n$\nAs we have the number of objects = $q_1 + \u0026hellip; + q_n - n + 1$\nThen the contradiction happens. $\\blacksquare$\n$\\boldsymbol{\\textsf{Corollary}}$ If $n(r-1)+1$ objects are distributed into $n$ boxes, then at least one of the boxes contains $r$ or more of the objects.\n$\\boldsymbol{\\sf Proof}$\nTake $q_1 = q_2 = \u0026hellip; = q_n = r$\n$n(r - 1) + 1 = nr - n + 1 = (q_1 + \u0026hellip; + q_n) - n + 1$\nBy theorem, there must be one box $\\geq r$. $\\blacksquare$\n$\\boldsymbol{\\textsf{Another way to formulate the pigeonhole principle}}$ Let $m_1, m_2, \u0026hellip;, m_n$ be non-negative integers. if $$ \\frac{m_1 + \u0026hellip; + m_n}{n} \u0026gt; r - 1 $$ then at least one of the integers is greater or equal to $r$.\n$\\boldsymbol{\\sf Proof}$\nBy contradiction, suppose that $m_i \u0026lt; r, \\forall i$. We can take the maximum value: $mi = r-1, \\forall i$, which gives us:\n$$ \\begin{align*} \\sum_{i=1}^{n} m_i = n(r-1)\\\\ \\frac{\\sum_{i=1}^{n} m_i}{n} = (r-1) \\end{align*} $$ Clearly, there is a contradiction. $\\blacksquare$\n$\\boldsymbol{\\sf Exercise}$\nTwo disks, one smaller than the other, are each divided into 200 congruent sectors.\nIn the larger disk, 100 of the sectors are chosen arbitrarily and painted red; the other 100 sectors are painted blue.\nIn the smaller disk, each sector is painted either red or blue with no stipulation on the number of red and blue sectors.\nThe small disk is then placed on the larger disk so that their centers coincide.\nShow that it is possible to align the two disks so that the number of sectors of the small disk whose color matches the corresponding sector of the large disk is at least 100.\nText copied from professor Leticia Dias Mattos\u0026rsquo;s Slide: https://lmattos.web.illinois.edu/math-413-lecture-log/\n$\\boldsymbol{\\sf Proof}$\nDefine: a configuration $c$ is just a way of placing the small disk on the large disk with aligned colors.\nWe can label (or mark the position of) the disk from 1 to 200\nDouble counting the following set: $$ S = \\set{(c, i): c \\text{ is a configuration and the sector } i \\text{ have matching colors}} $$ (1)\nFor each $i$, let $t_i = $ number of configurations so that the sector $i$ has matching colors\nThen $|S| = \\sum_{i=1}^{200} t_i = 200 \\cdot 100$\n(2)\nFor each configuration $c$, let $a_c$ be the number of sectors that has same color in the same label(position) $$ \\begin{align*} |S| \u0026amp;= \\sum_{\\text{c config}}^{} a_c\\\\ \\frac{|S|}{200} \u0026amp;= \\frac{\\sum_{\\text{c config}}^{} a_c}{200} = 100 \u0026gt; 100-1 \\end{align*} $$ By pigeonhole principle, done. $\\blacksquare$\nReference: https://lmattos.web.illinois.edu/math-413-lecture-log/, MATH 413, Leticia Dias Mattos\n","permalink":"https://helloboyxxx.github.io/samblog/posts/413_pigeonhole/","summary":"If $n+1$ objects are distributed into $n$ boxes, then at least one box contains two or more of the objects.\n$\\boldsymbol{\\sf Proof}$\nFor each $i\\in \\set{1, \u0026hellip;, n}$, let $a_i = $ number of objects in box $i$. Then, $a_1 + \u0026hellip; + a_n = n+1$ Let $a_j = \\text{max } a_i$. Then, \\begin{align*} n+1 \u0026amp;\\leq n\\cdot a_j \\\\ \\frac{n+1}{n} \u0026amp;\\leq a_j \\\\ 1 \u0026lt; \\frac{n+1}{n} \u0026amp;\\leq a_j\\\\ 1 \u0026amp;\u0026lt; a_j \\end{align*} Note that this conclusion doesn\u0026rsquo;t hold if you have $n$ objects or less.","title":"413_Pigeonhole_Principle"},{"content":"Binomial Coefficient and Binomial Identity Pascal\u0026rsquo;s Triangle $$ \\begin{matrix} {0 \\choose 0}\\\\ {1 \\choose 0} \u0026amp; {1 \\choose 1}\\\\ {2 \\choose 0} \u0026amp; {2 \\choose 1} \u0026amp; {2 \\choose 2}\\\\ {3 \\choose 0} \u0026amp; {3 \\choose 1} \u0026amp; {3 \\choose 2} \u0026amp; {3 \\choose 3}\\\\ {4 \\choose 0} \u0026amp; {4 \\choose 1} \u0026amp; {4 \\choose 2} \u0026amp; {4 \\choose 3} \u0026amp; {4 \\choose 4}\\\\ .\\\\ .\\\\ . \\end{matrix} $$\nPascal\u0026rsquo;s Formula For all integers $n$ and $k$ with $1 \\leq k \\leq n - 1$, we have: $$ {n \\choose k} = {{n-1} \\choose k} + {{n-1} \\choose {k-1}} $$\n$\\boldsymbol{\\sf Proof}$\nLet $S = {1, 2, \u0026hellip;, n}$ be a set of size n.\nWe\u0026rsquo;ll count in two ways of the size of the following set:\n$\\mathcal{C} = {A : A \\subseteq S, |A| = k}$\n(1) $|\\mathcal{C}| = {n \\choose k}$\n(2) Define: $$ \\begin{align*} \\mathcal{C_1} = \\{A : A \\subseteq S, |A| = k, 1 \\in A\\}\\\\ \\mathcal{C_2} = \\{A : A \\subseteq S, |A| = k, 1 \\not\\in A\\} \\end{align*} $$ Note that: $\\mathcal{C_1}$ and $\\mathcal{C_2}$ are disjoint, $\\mathcal{C} = \\mathcal{C_1} \\cup \\mathcal{C_2}$\nSince $|\\mathcal{C_1}| = {{n-1} \\choose {k-1}}$, $|\\mathcal{C_2}| = {{n-1} \\choose {k}}$, we get the identity.\n$\\boldsymbol{\\textsf{Theorem}}$ For $n \\geq 0$, we have: $$ {n \\choose 0} + {n \\choose 1} + {n \\choose 2} + \u0026hellip;+{n \\choose n} = 2^n $$ This is a row in the Pascal\u0026rsquo;s triangle.\n$\\boldsymbol{\\sf Proof}$\nLet $\\mathcal{C}$ = $n$-digit binary numbers. Two way to count this:\n(1) $|\\mathcal{C}| = 2^n$\n(2) Define: $\\mathcal{C_i} = n$-digit binary numbers with exactly $i$ 1\u0026rsquo;s.\nThen simply $|\\mathcal{C}| = \\sum_{i=0}^{n}\\mathcal{C_i}$ , as they are all disjoint.\n$\\boldsymbol{\\textsf{Theorem}}$ $$ {n \\choose 0} + {n \\choose 2} + \u0026hellip; = {n \\choose 1} + {n \\choose 3} + \u0026hellip; $$\n$\\boldsymbol{\\sf Proof}$\nLet $S = {1, \u0026hellip;,n}$\nDefine:\n$\\mathcal{C_1} = $ subsets of $S$ with odd size\n$\\mathcal{C_2} = $ subsets of $S$ with even size\nQuestion: How to select an even subset?\nFirst, select any subset $A \\subseteq {1, \u0026hellip;, n - 1}$:\nIf $|A|$ is even, then $A \\in \\mathcal{C_2}$, and $A \\cup {n} \\in \\mathcal{C_1}$ If $|A|$ is odd, then $A \\in \\mathcal{C_1}$, and $A \\cup {n} \\in \\mathcal{C_2}$ As this constructs a bijection, $|\\mathcal{C_1}| = |\\mathcal{C_2}| = 2^{n-1}$\n$\\boldsymbol{\\textsf{The Binomial Theorem}}$ Let $n$ be a positive integer. Then, for all $x$ and $y$ we have: $$ (x+y)^n = \\sum_{k=0}^{n} {n \\choose k} x^{n-k}y^k $$ $\\boldsymbol{\\sf Proof}$\nAs we have $n$ $(x+y)$ multiplication, we choose either an $x$ or a $y$ from each pair to multiply. This makes sure that we must have all terms in the form: $x^iy^{n-i}$. The remaining task is simply count the number of $x^iy^{n-i}$. Given this $i$, we have $n \\choose i$ ways to choose the combination, thus we have the resulting formula.\n$\\boldsymbol{\\textsf{Corollary}}$ Let $n$ be a positive integer. Then, for all $x$ we have\n$$ (1+x)^n = \\sum \\limits_{k=0}^{n} \\binom{n}{k} x^k $$\n$\\boldsymbol{\\textsf{Theorem}}$ For $1 \\leq k \\leq n$, we have: $$ {n \\choose k} = \\frac{n}{k} {{n - 1} \\choose {k-1}} $$ $\\boldsymbol{\\sf Proof}$\nGoal: $k{n \\choose k} = n{{n - 1} \\choose {k-1}}$\nAmong $n$ people, we want to select $k$ people and we want to elect one of these $k$ people as the boss.\n(1) First select $k$ people, then select the boss: ${n \\choose k} \\cdot k$\n(2) First select the boss, then choose subset of $n$ that contains this boss: $n \\cdot {{n-1} \\choose {k-1}}$\n$\\boldsymbol{\\textsf{Theorem}}$ For $n\\geq 1$ we have: $$ 1{n \\choose 1} + 2{n \\choose 2} + \u0026hellip; + n{n \\choose n} = n2^{n-1} $$\n$\\boldsymbol{\\sf Proof}$\n$n$ people, select a group of people with one boss. How many choices do we have?\n(1)\nSelect the size of the group: $i \\in {1, \u0026hellip;, n}$ Select a group with $i$ people: $n \\choose i$ Inside the group, assign someone to be the boss: $i$ This gives us the left side of the identity.\n(2)\nChoose the boss: $n$ Chose the rest of the group: A subset of remainning people: $2^{n-1}$ $\\boldsymbol{\\textsf{Theorem}}$ For $n \\geq 0$ we have: $$ \\sum_{k=0}^{n}{n \\choose k}^2 = {{2n}\\choose n} $$ Right side: The number of choices for selecting a group of $n$ people out of $2n$ people.\nLabeling the people: ${1, \u0026hellip;, 2n}$. Splitting this $2n$ people into two $n$ people group. Given a specific $k$, we can select $k$ people from the first group, and then $n-k$ people from the second group. In that situation, we have ${n \\choose k} \\cdot {n \\choose {n-k}}$. The final thing to do is simply take the sum of all the $k$\u0026rsquo;s. This gives us the left side of this identity.\n$\\boldsymbol{\\textsf{The hockey-stick identity}}$ For $0 \\leq k \\leq n$ we have: $$ \\sum_{m=k}^{n}{m \\choose k} = {{n+1} \\choose {k+1}} $$ Intuition: Choose a column, and draw a box. Summing the values in the box gives the value at position $(n+1, k+1)$.\n$\\boldsymbol{\\sf Proof}$\n$n+1$ people, select $k+1$: ${{n+1} \\choose {k+1}}$\nOrder people by height, from smallest to tallest: $1, 2, \u0026hellip;, n+1$\nSelect the tallest person in the group of size $m+1$, and then choose the rest $k$ people: ${{m} \\choose {k}}$ $m$ varies from $k$ to $n$ Summing all the $m$ cases gives us the left side of this identity. Reference: https://lmattos.web.illinois.edu/math-413-lecture-log/, MATH 413, Leticia Dias Mattos\n","permalink":"https://helloboyxxx.github.io/samblog/posts/413_binomial/","summary":"Binomial Coefficient and Binomial Identity Pascal\u0026rsquo;s Triangle $$ \\begin{matrix} {0 \\choose 0}\\\\ {1 \\choose 0} \u0026amp; {1 \\choose 1}\\\\ {2 \\choose 0} \u0026amp; {2 \\choose 1} \u0026amp; {2 \\choose 2}\\\\ {3 \\choose 0} \u0026amp; {3 \\choose 1} \u0026amp; {3 \\choose 2} \u0026amp; {3 \\choose 3}\\\\ {4 \\choose 0} \u0026amp; {4 \\choose 1} \u0026amp; {4 \\choose 2} \u0026amp; {4 \\choose 3} \u0026amp; {4 \\choose 4}\\\\ .\\\\ .\\\\ . \\end{matrix} $$\nPascal\u0026rsquo;s Formula For all integers $n$ and $k$ with $1 \\leq k \\leq n - 1$, we have: $$ {n \\choose k} = {{n-1} \\choose k} + {{n-1} \\choose {k-1}} $$","title":"413_binomial"},{"content":"A combination of a set $S$ is a term usually used to denote an unordered selection of the element of $S$. It is simply a selection of a subset of $S$.\n$r$-combination = $r$-subset. $n\\choose r$ is the number of $r$-subset in the set of size $n$. Theorem For $0 \\leq r \\leq n$, we have: $$ P(n, r) = r! {n \\choose r} \\text{ and } {n \\choose r} = \\frac{n!}{r!(n-r)!} $$ Pf:\nLet $S$ be a set of size $n$. $S = {s_1, \u0026hellip;, s_n}$\nFirst, let us choose a string of size $r$ formed by elements of $S$ ($r$-permutation): $$ \\mathcal{P}(n, r) = {(s_{i1}, \u0026hellip;, s_{ir}): s_{ij} \\in S, \\text{all distinct}} $$ And define: $$ \\mathcal{C}(n, r) = \\text{set of subsets of }S \\text{ with size }r $$ Define the function: $$ f:\\mathcal{P}(n, r) \\to \\mathcal{C}(n, r)\\ f(s_{i1}, \u0026hellip;, s_{ir}) = {s_{i1}, \u0026hellip;, s_{ir}} $$ Consider: How many times a set is being counted?\nAns: $r!$\nThen we have: $$ |\\mathcal{P}(n, r)| = r!|\\mathcal{C}(n, r)| $$\nCorollary $$ {n \\choose r} = {n \\choose {n-r}} $$\nProblem:\nThere is a $4 \\times 6$ grid. Starting from bottom left and ending at top right. You can only choose up or right move. How many different paths can you take?\nThere is a bijection between these paths and the set of strings of size 10 of the form: $(a_1, a_2,\u0026hellip;, a_{10})$, where each $a_i$ is $U$ or $R$. ($URUURR\u0026hellip;$). But since the number of $U$\u0026rsquo;s = 4, the number of distributing 4 $U$\u0026rsquo;s in a string of size 10 is $10 \\choose 4$.\nTheorem Let $S$ be a multiset with objects of $k$ different types, where each object has an infinite repetition number. Then, the number of $r$-permutations of $S$ is $k^r$.\nPf:\nThere are $r$ position to be filled in. Each position has $k$ choices since we have infinite number of each type in this multiset S. This gives us $k^r$\nAnother examle: $S = {a, a, b}$. If we want 3-permutation of S. In this case, $(a, a, a)$ is not a 3-permutation of S.\nTheorem Let the size of $S$ be $n = n_1 + \u0026hellip; + n_k$. Then the number of permutations of $S$ is equal to: $$ \\frac{n!}{(n_1)!(n_2)!\u0026hellip; (n_k)! } $$ Pf:\nLet $a_1^1, \u0026hellip;, a_{n_1}^1$ be a labelling of the elements of type 1.\nLet $a_1^2, \u0026hellip;, a_{n_2}^2$ be a labelling of the elements of type 2.\nLet $a_1^3, \u0026hellip;, a_{n_3}^3$ be a labelling of the elements of type 3.\n\u0026hellip;\nLet $a_1^k, \u0026hellip;, a_{n_k}^k$ be a labelling of the elements of type 3.\nConsider the set $S\u0026rsquo; = {a_1^1, \u0026hellip;, a_{n_1}^1, \u0026hellip;, a_1^k, \u0026hellip;, a_{n_k}^k}$\nThe permutations of $S\u0026rsquo; = n!$. Then we can create a function: $$ f:{\\text{permutations of }S\u0026rsquo;} \\to {\\text{permutation of }S}\\ f(\\text{string} = \\text{string where the labels are removed}) $$ Removing the label makes all those elements in the same type indistinguishable. (You cannot tell the different between $a_1^1$ and $a_2^1$ if the lable is removed.)\nConsider: For a given permutation $A$ of $S$, what\u0026rsquo;s the number of the set ${S: f(S) = A}$?\nAns: $(n_1)!(n_2)! \u0026hellip; (n_k)!$\nProblem: How many ways do we have of partitioning the set ${1, 2, \u0026hellip;, 10}$ into 3 sets: out of size 2, out of size 3, and another of size 5?\nSolution 1: $$ {10 \\choose 2} {8 \\choose 3} {5 \\choose 5} = {10 \\choose 5} {5 \\choose 3} {2 \\choose 2} $$ Solution 2:\nDefine the set: $\\mathcal{P}(10) =$ set of all permutations of ${1, \u0026hellip;, 10}$. Then, $|\\mathcal{P} = 10!|$\nDefine: $f: \\mathcal{P} \\to {\\text{Box configurations}}$ by: $$ f(a_1, \u0026hellip;, a_{10}) = \\left( {a_1, a_2}, {a_3, a_4, a_5}, {\u0026hellip;} \\right) $$ Question: Given a box configuration $\\mathcal{B}$, what is the number ${S:f(S) = \\mathcal{B}}$, where $S$ are strings. $$ |\\mathcal{P}(10)| = |\\text{Box configuration}| \\cdot 2! \\cdot 3! \\cdot 5! $$ This gives us: $$ |\\text{Box configuration}| = \\frac{|\\mathcal{P}(10)|}{2! \\cdot 3! \\cdot 5!} $$\nTheorem 2.4.3: Let $n$ be a positive integer and let $n_1, n_2, \u0026hellip; ,n_k$ be positive integers with $n = n_l + n_2 + \u0026hellip; + n_k$· The number of ways to partition a set of $n$ objects into k labeled boxes in which Box 1 contains $n_1$ objects, Box 2 contains $n_2$ objects, \u0026hellip; , Box $k$ contains $n_k$ objects equals: $$ \\frac{n!}{n_1! \\cdot n_2! \\cdot \\cdot \\cdot n_k!} $$\nTheorem 2.5.1 Let $S$ be a multiset with objects of $k$ types, each with an infinite repetition number. Then, the number of $r$-combinations of $S$ equals to: $$ {{r + k - 1} \\choose r} $$ Pf:\nNow: we need to select a submultiset. Each submultiset is associated to a solution of: $$ X_1 + \u0026hellip; + X_k = r\\ X_1, \u0026hellip;, X_k \\in \\mathbb{N} \\cup {0} $$ Let $\\mathcal{S}$ be the set of solutions.\nDefine: $f: \\mathcal{S} \\to {0, 1 \\text{ bit strings with } k - 1 \\text{ ones and }r \\text{ zeros}}$ by :\n$f(x_1, \u0026hellip;, x_k) = (00 \u0026hellip;0(X_1\\text{ zeros})) 1 (00 \u0026hellip;0(X_2\\text{ zeros})) 1 \u0026hellip; (00 \u0026hellip;0(X_k\\text{ zeros}))$\nGiven $s \\in f(\\mathcal{S})$, the number of 1\u0026rsquo;s in $s = k - 1$, and the number of 0\u0026rsquo;s in $s = r$.\nEasy to check that this function $f$ is a bijection.\n$\\mathcal{R} =$ set of 0-1 strings with $k-1$ 1\u0026rsquo;s and $r$ 0\u0026rsquo;s. It suffices to show: $|\\mathcal{R}| = |\\mathcal{S}|$. $\\blacksquare$\nProblem:\nA bakery boasts eight varieties of doughnuts. If a box of doughnuts contains one dozen, how many different options are there for a box of doughnuts?\nWe need to calculate the number of solutions for: $X_1 + \u0026hellip; + X_8 = 12$, which is: ${8 + 12 - 1} \\choose 12$.\nProblem:\nWhat is the number of integral solutions of the equation $X_1 + X_2 + X_3 + X_4 = 20$, in which $X_1 \\geq 3, X_2 \\geq 1, X_3 \\geq 0, X_4 \\geq 5$?\nDefine:\n$X_1 = Y_1 + 3$\n$X_2 = Y_2 + 1$\n$X_3 = Y_3$\n$X_4 = Y_4 + 5$\nThis gives us: $Y_1 + Y_2 + Y_3 + Y_4 = 20 - (3 + 1 + 0 + 5) = 11$\nThe number of solutions with $Y_i \\in \\mathbb{N} \\cup {0} = {14 \\choose 3}$\nNext class:\nPascal\u0026rsquo;s Formula For all integers $n$ and $k$ with $1 \\leq k \\leq n - 1$, we have: $$ {n \\choose k} = {{n-1} \\choose k} + {{n-1} \\choose {k-1}} $$\nReference: https://lmattos.web.illinois.edu/math-413-lecture-log/, MATH 413, Leticia Dias Mattos\n","permalink":"https://helloboyxxx.github.io/samblog/posts/413_combinations/","summary":"A combination of a set $S$ is a term usually used to denote an unordered selection of the element of $S$. It is simply a selection of a subset of $S$.\n$r$-combination = $r$-subset. $n\\choose r$ is the number of $r$-subset in the set of size $n$. Theorem For $0 \\leq r \\leq n$, we have: $$ P(n, r) = r! {n \\choose r} \\text{ and } {n \\choose r} = \\frac{n!","title":"413_combinations"},{"content":"Deterministic Finite Automaition Definition: $(Q, s, A, \\delta)$\n$Q$: A set of all the possible state.\n$s \\in Q$ : starting state. The state to start the machine.\n$A \\subseteq Q$: The set of states we accept. Return \u0026ldquo;good\u0026rdquo; when we end there.\n$\\delta$: A function $Q \\times \\Sigma \\rightarrow Q$. The set of all transition functions.\nThere is an interesting DFA design question. The question is as follows:\nGiven a bit-string (a string that contains only 0s and 1s), design a DFA that accepts the string if and only if the number represented by the string is divisible by 5.\nInitially, I was thinking of the trailing bits of the binary representation. However, there are too many states to consider. A better way of constructing the states of this machine is to consider the reminders. By doing this, it only uses 5 states \u0026mdash; it worth a try. So, I tried to write out the binary numbers and tried to design the transition functions for simple cases. It turns out that the result works well.\nI also wrote a short python script for verifying this:\n# verifying dfa # for this specific task, we need to use DFA to determine wheter the incomming bit string can be divible by 5. # The general definition of a DFA is: # M = (Q, q0, A, S) # Q is a finite set of states # q0 is the start state # A is a set of accepting states # delta is a transition function that takes a state and an input symbol and returns a state # also consider the alphabet sigma, we can use this to generate random inputs sigma = [0, 1] # this is the alphabet. # We need to define the machine, and then we can verify it Q = [0, 1, 2, 3, 4] q0 = 0 A = [0] # represent the transition function as a dictionary # the key is a tuple of (state, input symbol) # the value is the next state # the size of this dictionay == |Q| * |sigma| delta = { (0, 0): 0, (0, 1): 1, (1, 0): 2, (1, 1): 3, (2, 0): 4, (2, 1): 0, (3, 0): 1, (3, 1): 2, (4, 0): 3, (4, 1): 4 } # now we can write a function to verify the DFA # we assume that the given dfa is an tuple of (Q, q0, A, S) def verify_dfa(dfa, input_string): # first we need to check if the input_string is valid for c in input_string: if (int)(c) not in sigma: return False # start the verification current_state = dfa[1] for c in input_string: current_state = dfa[3][(current_state, (int)(c))] # looking up the dict for the next state if current_state in dfa[2]: return True return False # end of verify_dfa # now we can test the function dfa = (Q, q0, A, delta) import random # randomly generate strings of length less than length l test_num = 100 l = 10 result = True for _ in range(test_num): length = random.randint(1, l) input_string = \u0026#39;\u0026#39; for _ in range(length): input_string += str(random.randint(0, 1)) if (int(input_string, 2) % 5 == 0) != verify_dfa(dfa, input_string): result = False break # print in the order: dfa result, actual resultinput string in decimal, seperated by tab # print(verify_dfa(dfa, input_string), end=\u0026#39;\\t\u0026#39;) # print(int(input_string, 2) % 5 == 0, end=\u0026#39;\\t\u0026#39;) # print(int(input_string, 2), end=\u0026#39;\\n\u0026#39;) # end of for print(f\u0026#34;tested {test_num} times with bit string of length less than {l}, \u0026#34;, end=\u0026#34;\u0026#34;) if result: print(\u0026#34;the DFA is correct!\u0026#34;) else: print(\u0026#34;the DFA is not correct!\u0026#34;) ","permalink":"https://helloboyxxx.github.io/samblog/posts/interesting_dfa/","summary":"Deterministic Finite Automaition Definition: $(Q, s, A, \\delta)$\n$Q$: A set of all the possible state.\n$s \\in Q$ : starting state. The state to start the machine.\n$A \\subseteq Q$: The set of states we accept. Return \u0026ldquo;good\u0026rdquo; when we end there.\n$\\delta$: A function $Q \\times \\Sigma \\rightarrow Q$. The set of all transition functions.\nThere is an interesting DFA design question. The question is as follows:\nGiven a bit-string (a string that contains only 0s and 1s), design a DFA that accepts the string if and only if the number represented by the string is divisible by 5.","title":"Interesting DFA"},{"content":"Gomor\u0026rsquo;s Theorem: If you move two cells of a $8 \\times 8$ chessboard of opposite colors, the remaining cells can be fully domino tiled.\nPf:\nDraw a closed path that passes through every square exactly once. (Draw a big C and then draw back and forth horizontally)\nChoose the two cells to be removed, and the closed path we have will be sperated into two paths.\nIf we lable the close path we chose in the beginning from 1 to 64 in the order we drew it, white cells have odd numbers, and black cells have even numbers (or reversed).\nEasy to see that the path in between the two cells crosses even number tiles.\nGomor\u0026rsquo;s on more general chessboard ($n \\times m$ board): The two opposite corners must be in opposite color iff n and m has different paritity.\nPF: Consider the \u0026ldquo;L\u0026rdquo; shape edge of the board(half the square), there are $m + n - 1$ tiles. When this number is even, they are in opposite color.\nThen check: When m and n have different parity, then there must be an \u0026ldquo;S\u0026rdquo; shape closed path to cross all the tiles.\nDef: b-ominos. It covers b tiles in a row\u0026hellip;\nThm: An $m \\times n$ board has a tiling with b-ominos iff $b|m$ or $b|n$. $\\leftarrow$ is trivial.\n$\\rightarrow$:\nColor the board:\n$$ \\begin{matrix} 1 \u0026amp; 2 \u0026amp; 3 \u0026amp; 4 \u0026amp; 5 \u0026amp; 6 \u0026amp;...\\\\ 3 \u0026amp; 1 \u0026amp; 2 \u0026amp; 3 \u0026amp; 4 \u0026amp; 5 \u0026amp;... \\\\ 2 \u0026amp; 3 \u0026amp; 1 \u0026amp; 2 \u0026amp; 3 \u0026amp; 4 \u0026amp;... \\\\ .\\\\ .\\\\ . \\end{matrix} $$\nConsider the board has dimension $m \\times n$ and $m = qb + r$, $n = tb + s$\nThen, on this board, each b-omino see a color exactly once.\nAssume, for contradiction, $r, s \\neq 0$\nAs we are assuming to have a b-omino tiling, each color shows up the same number of times $\\rightarrow$ then in the little $r \\times s$ chessboard, each color has the same number of squares. WLOG, assume $s \\leq r$. The number of 1\u0026rsquo;s in the $r \\times s$ chessboard = $s$. The total number of squares is $rs$. Consider we tiling with b-ominos, the number of sqares is also $sb$ (Each b-omino sees every color once, so number of 1\u0026rsquo;s = number of tiles. So $sb$). Cancle out the b, we have the contradiction.\nReference: https://lmattos.web.illinois.edu/math-413-lecture-log/, MATH 413, Leticia Dias Mattos\n","permalink":"https://helloboyxxx.github.io/samblog/posts/413_chessboard/","summary":"Gomor\u0026rsquo;s Theorem: If you move two cells of a $8 \\times 8$ chessboard of opposite colors, the remaining cells can be fully domino tiled.\nPf:\nDraw a closed path that passes through every square exactly once. (Draw a big C and then draw back and forth horizontally)\nChoose the two cells to be removed, and the closed path we have will be sperated into two paths.\nIf we lable the close path we chose in the beginning from 1 to 64 in the order we drew it, white cells have odd numbers, and black cells have even numbers (or reversed).","title":"413_chessboard"},{"content":"Consider a $n \\times m$ chessboard\u0026hellip;\n$$ \\int{f(x)dx} $$\nSince $94 = 4 + 5x$ for some $x \\in \\mathbb{N}$, my claim is that the first player wins when it chooses $4$ in the beginning. Then, whenever the second player choose $a, x \\in{1, 2, 3, 4}$, the first player just add it to 5. So choose $5-a$. By doing this, the first player always reaches $10x + 9$ or $10x + 4$ for $x \\in \\mathbb{N}$. Since $94$ is included, the first player must win.\n$\\mathfrak{ABCDEFG}$\nHi $z = x + y$.\n$$a^2 + b^2 = c^2$$\n$$\\begin{vmatrix}a \u0026amp; b\\\\ c \u0026amp; d \\end{vmatrix}=ad-bc$$\nfrom: https://yihui.org/en/2018/07/latex-math-markdown/\ncomplex math (array) $$ \\begin{array} {lcl} L(p,w_i) \u0026amp;=\u0026amp; \\dfrac{1}{N}\\Sigma_{i=1}^N(\\underbrace{f_r(x_2 \\rightarrow x_1 \\rightarrow x_0)G(x_1 \\longleftrightarrow x_2)f_r(x_3 \\rightarrow x_2 \\rightarrow x_1)}_{sample\\, radiance\\, evaluation\\, in\\, stage2} \\\\\\\\\\\\ \u0026amp;=\u0026amp; \\prod_{i=3}^{k-1}(\\underbrace{\\dfrac{f_r(x_{i+1} \\rightarrow x_i \\rightarrow x_{i-1})G(x_i \\longleftrightarrow x_{i-1})}{p_a(x_{i-1})}}_{stored\\,in\\,vertex\\, during\\,light\\, path\\, tracing\\, in\\, stage1})\\dfrac{G(x_k \\longleftrightarrow x_{k-1})L_e(x_k \\rightarrow x_{k-1})}{p_a(x_{k-1})p_a(x_k)}) \\end{array} $$\nTesting alignments $$ \\begin{align*} \\frac{1}{\\Gamma(s)}\\int_{0}^{\\infty}\\frac{u^{s-1}}{e^{u}-1}\\mathrm{d}u \\end{align*} $$\nHx tests $$ \\mathcal{F} $$\n$$ \\lambda_i \\xlongequal[]{\\text{eq.}(1)}\\int_{{i}} $$\n$$ \\begin{align*} \\text{(1) } 0\\oplus 0 \u0026amp; = 0\\\\ \\text{(2) } 1\\oplus 0 \u0026amp; = 1\\\\ \\text{(3) } 0\\oplus 1 \u0026amp; = 1\\\\ \\text{(4) } 1\\oplus 1 \u0026amp; = 0 \\end{align*} $$\nWe observe that:\n$$ \\begin{itemize} \\item for $y=x\\oplus z$, $y$ agreees with $x$ if (1) or (3) happen; disagrees if (2) or (4) happen. \\item $y=0$ iff $x$ and $z$ agree; $y=1$ iff $x$ and $z$ disagree. \\end{itemize} $$\nIf you need these source codes:\nConsider a $n \\times m$ chessboard... $$ \\int{f(x)dx} $$ Since $94 = 4 + 5x$ for some $x \\in \\mathbb{N}$, my claim is that the first player wins when it chooses $4$ in the beginning. Then, whenever the second player choose $a, x \\in\\{1, 2, 3, 4\\}$, the first player just add it to 5. So choose $5-a$. By doing this, the first player always reaches $10x + 9$ or $10x + 4$ for $x \\in \\mathbb{N}$. Since $94$ is included, the first player must win. $\\mathfrak{ABCDEFG}$ Hi `$z = x + y$`. `$$a^2 + b^2 = c^2$$` `$$\\begin{vmatrix}a \u0026amp; b\\\\ c \u0026amp; d \\end{vmatrix}=ad-bc$$` from: https://yihui.org/en/2018/07/latex-math-markdown/ ### complex math (array) `$$ \\begin{array} {lcl} L(p,w_i) \u0026amp;=\u0026amp; \\dfrac{1}{N}\\Sigma_{i=1}^N(\\underbrace{f_r(x_2 \\rightarrow x_1 \\rightarrow x_0)G(x_1 \\longleftrightarrow x_2)f_r(x_3 \\rightarrow x_2 \\rightarrow x_1)}_{sample\\, radiance\\, evaluation\\, in\\, stage2} \\\\\\\\\\\\ \u0026amp;=\u0026amp; \\prod_{i=3}^{k-1}(\\underbrace{\\dfrac{f_r(x_{i+1} \\rightarrow x_i \\rightarrow x_{i-1})G(x_i \\longleftrightarrow x_{i-1})}{p_a(x_{i-1})}}_{stored\\,in\\,vertex\\, during\\,light\\, path\\, tracing\\, in\\, stage1})\\dfrac{G(x_k \\longleftrightarrow x_{k-1})L_e(x_k \\rightarrow x_{k-1})}{p_a(x_{k-1})p_a(x_k)}) \\end{array} $$` ### Testing alignments `$$ \\begin{align*} \\frac{1}{\\Gamma(s)}\\int_{0}^{\\infty}\\frac{u^{s-1}}{e^{u}-1}\\mathrm{d}u \\end{align*} $$` ### Hx tests 1. $$ \\mathcal{F} $$ 2. $$ \\lambda_i \\xlongequal[]{\\text{eq.}(1)}\\int_{\\{i\\}} $$ 3. `$$ \\begin{align*} \\text{(1) } 0\\oplus 0 \u0026amp; = 0\\\\ \\text{(2) } 1\\oplus 0 \u0026amp; = 1\\\\ \\text{(3) } 0\\oplus 1 \u0026amp; = 1\\\\ \\text{(4) } 1\\oplus 1 \u0026amp; = 0 \\end{align*} $$` We observe that: 4. $$ \\begin{itemize} \\item for $y=x\\oplus z$, $y$ agreees with $x$ if (1) or (3) happen; disagrees if (2) or (4) happen. \\item $y=0$ iff $x$ and $z$ agree; $y=1$ iff $x$ and $z$ disagree. \\end{itemize} $$ ","permalink":"https://helloboyxxx.github.io/samblog/posts/latex_test/","summary":"Consider a $n \\times m$ chessboard\u0026hellip;\n$$ \\int{f(x)dx} $$\nSince $94 = 4 + 5x$ for some $x \\in \\mathbb{N}$, my claim is that the first player wins when it chooses $4$ in the beginning. Then, whenever the second player choose $a, x \\in{1, 2, 3, 4}$, the first player just add it to 5. So choose $5-a$. By doing this, the first player always reaches $10x + 9$ or $10x + 4$ for $x \\in \\mathbb{N}$.","title":"Some latex tests"},{"content":"I have had a wonderful summer as I have been able to take Math 417 with Professor Chales Rezk. He is a very very good teacher and I have learnt a lot from him. Thanks!\nThese are the notes I have taken during the course. It includes the greate Theorems, Lemmas and Propositions that we have learnt in the course.\nPrevious Next \u0026nbsp; \u0026nbsp; / [pdf] View the PDF file here. ","permalink":"https://helloboyxxx.github.io/samblog/posts/417_review/","summary":"I have had a wonderful summer as I have been able to take Math 417 with Professor Chales Rezk. He is a very very good teacher and I have learnt a lot from him. Thanks!\nThese are the notes I have taken during the course. It includes the greate Theorems, Lemmas and Propositions that we have learnt in the course.\nPrevious Next \u0026nbsp; \u0026nbsp; / [pdf] View the PDF file here.","title":"My Math 417 review notes"},{"content":"The four basic counting principle Suppose that a set $S$ is partitioned into pairwise disjoint parts $S_1, S_2, \u0026hellip;, S_n$.\nAddition principle: $$ |S| = |S_1| + |S_2| + \u0026hellip; + |S_m| $$\nEx:\nPath counting: In a $3 \\times 3$ grid, if you can move 1 step upward or 1 step to the right. How many ways do we have to move from bottom-left to top-right corner?\nThe idea is to break this problem into smaller problems. Addition principle guarrantees that we can add the numbers together.\nThink of the final step we need to take. It must be either an up or a right. This makes the problem to become a similar but smaller problem that has $2 \\times 3$ size. Mark it $n_{2\\times 3}$\nUsing the same idea, we have:\n$$ n_{3 \\times 3} = 2 \\cdot n_{2 \\times 3} = 2 \\cdot (n_{2 \\times 2} + n_{3 \\times 1}) $$\nMultiplication principle Let $S$ be a set of ordered pairs $(a, b)$ of objects, where the first object $a$ comes from a set of size $p$, and for each choice of object $a$ there are q choices for object $b$. Then the size of $S$ is\n$$ |S| = p \\cdot q $$\nGeneralized multiplicative principle\nLet $S$ be a finite set of $p$-tuples $a = (a_1, \u0026hellip;, a_p)$ and let $t_1, \u0026hellip;, t_p$ be some positive numbers.\nSuppose that for every $a = (a_1, \u0026hellip;, a_p) \\in S$, and every $i \\in {1, \u0026hellip;, p}$, we have $$ |{b \\in S:b_j = a_j, \\forall j \\neq i}| = t_i $$ Then, $$ |S| = t_1 \\cdot t_2 \\cdot \u0026hellip; t_p $$ (4) counts the number of choices if we fix all other dimension except $i$.\nEx:\nDetermine the number of positive integers that are factors of the number $2^{10}\\cdot 7 \\cdot 13^3$.\nThis number can be written as: $2^{a}\\cdot 7^b \\cdot 13^c$. Then just consider the number of choices for $a, b, c$:\n$a \\in {0, 1, \u0026hellip; 10}$ $b \\in {0, 1}$ $c \\in {0, 1, 2, 3}$\nIn total, $11 \\cdot 2 \\cdot 4 = 88$\nObservation In the multiplication principle the $q$ choices for object $b$ may vary the choice of $a$. The only requirement is that there be the same number $q$ of choices, not necessarily the same choices.\n(When we choose one coordinate, the choices for other coordinates changes)\nEx:\nHow many two-digit numbers have distinct and nonzero digits?\n9 * 8 = 72. The first digit has 9 choices, the second digit has 8 (since 0 and the 1st choice are not allowed)\nSubtraction Principle Let $A$ be a set and let $U$ be a larger set containing $A$. Let $$ \\bar{A} = U \\setminus A = {x \\in U : x \\notin A} $$\nEx:\nComputer passwords are consist of a string of six symbols taken from digit 0 to 9 and letters a to z.\nHow many computer passwords have a repeat symbol?\nans: The number of total passwords - passwords that don\u0026rsquo;t repeat.\n= $36^6 - 36 * 35 * 34 * 33 * 32 * 31$\nDivision principle Let $S$ be a finite set htat is partitioned into k parts in such a way that each part contains the same number of objects. Then the number of parts in the partition is given by the rule. $$ k = \\frac{|S|}{|S_i|} $$ A multiset is a modification of the concept of a set that, unlike a set, allows for multiple instances for each of its elements.\nEx: ${a, a, b}$ the element a has multiplicity 2, and b has multiplicity 1.\nDivision principle for multisets\nLet $S$ be a finite multiset in which each element has the same multiplicity $m$, Let $A$ be the underlying set of $S$, formed from its distinct elements. The the size is given by: $$ |A| = \\frac{|S|}{m} $$\nReference: https://lmattos.web.illinois.edu/math-413-lecture-log/, MATH 413, Leticia Dias Mattos\n","permalink":"https://helloboyxxx.github.io/samblog/posts/413_basic_counting/","summary":"The four basic counting principle Suppose that a set $S$ is partitioned into pairwise disjoint parts $S_1, S_2, \u0026hellip;, S_n$.\nAddition principle: $$ |S| = |S_1| + |S_2| + \u0026hellip; + |S_m| $$\nEx:\nPath counting: In a $3 \\times 3$ grid, if you can move 1 step upward or 1 step to the right. How many ways do we have to move from bottom-left to top-right corner?\nThe idea is to break this problem into smaller problems.","title":"413_basic_counting"}]
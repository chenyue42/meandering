<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Sam&#39;s Blog</title>
    <link>https://helloboyxxx.github.io/samblog/posts/</link>
    <description>Recent content in Posts on Sam&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Sep 2023 13:23:54 -0500</lastBuildDate><atom:link href="https://helloboyxxx.github.io/samblog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>413_combinations</title>
      <link>https://helloboyxxx.github.io/samblog/posts/413_combinations/</link>
      <pubDate>Fri, 08 Sep 2023 13:23:54 -0500</pubDate>
      
      <guid>https://helloboyxxx.github.io/samblog/posts/413_combinations/</guid>
      <description>A combination of a set $S$ is a term usually used to denote an unordered selection of the element of $S$. It is simply a selection of a subset of $S$.
$r$-combination = $r$-subset. $n\choose r$ is the number of $r$-subset in the set of size $n$. Theorem For $0 \leq r \leq n$, we have: $$ P(n, r) = r! {n \choose r} \text{ and } {n \choose r} = \frac{n!</description>
    </item>
    
    <item>
      <title>Interesting DFA</title>
      <link>https://helloboyxxx.github.io/samblog/posts/interesting_dfa/</link>
      <pubDate>Wed, 30 Aug 2023 13:10:06 -0500</pubDate>
      
      <guid>https://helloboyxxx.github.io/samblog/posts/interesting_dfa/</guid>
      <description>Deterministic Finite Automaition Definition: $(Q, s, A, \delta)$
$Q$: A set of all the possible state.
$s \in Q$ : starting state. The state to start the machine.
$A \subseteq Q$: The set of states we accept. Return &amp;ldquo;good&amp;rdquo; when we end there.
$\delta$: A function $Q \times \Sigma \rightarrow Q$. The set of all transition functions.
There is an interesting DFA design question. The question is as follows:
Given a bit-string (a string that contains only 0s and 1s), design a DFA that accepts the string if and only if the number represented by the string is divisible by 5.</description>
    </item>
    
    <item>
      <title>413_chessboard</title>
      <link>https://helloboyxxx.github.io/samblog/posts/413_chessboard/</link>
      <pubDate>Tue, 29 Aug 2023 17:24:30 -0500</pubDate>
      
      <guid>https://helloboyxxx.github.io/samblog/posts/413_chessboard/</guid>
      <description>Gomor&amp;rsquo;s Theorem: If you move two cells of a $8 \times 8$ chessboard of opposite colors, the remaining cells can be fully domino tiled.
Pf:
Draw a closed path that passes through every square exactly once. (Draw a big C and then draw back and forth horizontally)
Choose the two cells to be removed, and the closed path we have will be sperated into two paths.
If we lable the close path we chose in the beginning from 1 to 64 in the order we drew it, white cells have odd numbers, and black cells have even numbers (or reversed).</description>
    </item>
    
    <item>
      <title>My Math 417 review notes</title>
      <link>https://helloboyxxx.github.io/samblog/posts/417_review/</link>
      <pubDate>Mon, 28 Aug 2023 15:50:48 -0500</pubDate>
      
      <guid>https://helloboyxxx.github.io/samblog/posts/417_review/</guid>
      <description>I have had a wonderful summer as I have been able to take Math 417 with Professor Chales Rezk. He is a very very good teacher and I have learnt a lot from him. Thanks!
These are the notes I have taken during the course. It includes the greate Theorems, Lemmas and Propositions that we have learnt in the course.
Previous Next &amp;nbsp; &amp;nbsp; / [pdf] View the PDF file here.</description>
    </item>
    
    <item>
      <title>413_basic_counting</title>
      <link>https://helloboyxxx.github.io/samblog/posts/413_basic_counting/</link>
      <pubDate>Mon, 28 Aug 2023 14:35:27 -0500</pubDate>
      
      <guid>https://helloboyxxx.github.io/samblog/posts/413_basic_counting/</guid>
      <description>The four basic counting principle Suppose that a set $S$ is partitioned into pairwise disjoint parts $S_1, S_2, &amp;hellip;, S_n$.
Addition principle: $$ |S| = |S_1| + |S_2| + &amp;hellip; + |S_m| $$
Ex:
Path counting: In a $3 \times 3$ grid, if you can move 1 step upward or 1 step to the right. How many ways do we have to move from bottom-left to top-right corner?
The idea is to break this problem into smaller problems.</description>
    </item>
    
  </channel>
</rss>
